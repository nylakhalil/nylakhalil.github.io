{"version":3,"sources":["components/Header.js","components/Footer.js","components/MapView.js","components/HomeView.js","components/CodeView.js","components/PhotoView.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Navbar_default","collapseOnSelect","expand","bg","Toggle","Collapse","className","Nav_default","Link","eventKey","href","Component","Footer","Row_default","Col_default","index_es","icon","faGithub","color","faLinkedin","Date","getFullYear","BaseLayer","LayersControl","MapView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","zoom","center","baselayers","markers","_this2","fetch","then","response","json","setState","catch","error","console","layer","checked","on","key","id","name","TileLayer","attribution","url","iconName","htmlText","replace","L","divIcon","html","iconAnchor","iconSize","popupAnchor","marker","getMarkerIcon","Marker","position","Popup","text","_this3","Map","map","getBaselayers","getMarkers","React","HomeView","MapView_MapView","CodeView","title","content","icons","faObjectGroup","faCode","faShieldAlt","faCubes","words","options","colors","enableTooltip","fontFamily","fontSizes","fontStyle","fontWeight","padding","rotations","rotationAngles","scale","spiral","transitionDuration","item","onClick","setContent","bind","undefined","keys","length","index_module","getCol","getWorldCloud","PhotoView","images","interval","res","result","Carousel_default","indicators","controls","image","Item","src","alt","Caption","_this$state","getCarousel","App","components_Header","react_router_dom","basename","process","react_router","exact","path","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20b7b34e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Nav>\n                        <Nav.Link eventKey={1} href=\"/#\">About</Nav.Link>\n                        <Nav.Link eventKey={2} href=\"/#/code\">Develop</Nav.Link>\n                        <Nav.Link eventKey={3} href=\"/#/photography\">Photograpy</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n  \nexport default Header;\n  ","import React, { Component } from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <footer className=\"fixed-bottom\">\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <ul className=\"list-unstyled list-inline mb-1\">\n                            <li className=\"list-inline-item\">\n                                <a href=\"https://github.com/nylakhalil\">\n                                    <FontAwesomeIcon icon={faGithub} color=\"black\" />\n                                </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                                <a href=\"https://www.linkedin.com/in/nylakhalil/\">\n                                    <FontAwesomeIcon icon={faLinkedin} color=\"black\" />\n                                </a>\n                            </li>\n                        </ul>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center\">\n                    <p className=\"text-center small\">Copyright &copy; Nyla Khalil {(new Date().getFullYear())}</p>\n                </Row>\n            </footer>\n        );\n    }\n}\n  \nexport default Footer;","import React from 'react'\nimport { Map, LayersControl, TileLayer, Marker, Popup } from 'react-leaflet'\nimport L from 'leaflet'\n\nimport 'leaflet/dist/leaflet.css'\n\nconst { BaseLayer } = LayersControl\nconst DATA_ENDPOINT = '/json/map.json'\n\nexport default class MapView extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {\n        zoom: 14,\n        center: [38.889931, -77.009003],\n        baselayers: [],\n        markers: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(DATA_ENDPOINT)\n      .then(response => { return response.json() })\n      .then(data =>  this.setState({data: data}) )\n      .catch(error => console.error('Error: ', error));\n  }\n\n  getBaselayers(layer) {\n    if (layer) {\n      return (\n        <BaseLayer checked={layer.on === 'true'} key={layer.id} name={layer.name}>\n          <TileLayer attribution={layer.attribution} url={layer.url} />\n        </BaseLayer>\n      )\n    }\n  }\n\n  getMarkerIcon(iconName) {\n    let htmlText = '<i class=\"fa fa-{}\" />'.replace('{}', iconName);\n    return L.divIcon({\n      className:'div-icon',\n      html: htmlText,\n      iconAnchor:[0,0],\n      iconSize:null,\n      popupAnchor:[0,0]\n    });\n  }\n\n  getMarkers(marker) {\n    if (marker) {\n      let icon = this.getMarkerIcon(marker.icon);\n      return (\n        <Marker key={marker.id} position={marker.position} icon={icon}>\n            <Popup>{marker.text}</Popup>\n        </Marker>\n      )\n    }\n  }\n\n  render() {\n    return (\n        <Map center={this.state.data.center} zoom={this.state.data.zoom}>\n          <LayersControl position=\"topright\">\n            {this.state.data.baselayers.map(layer => this.getBaselayers(layer))}\n          </LayersControl>\n          {this.state.data.markers.map(marker => this.getMarkers(marker))}\n        </Map>\n    )\n  }\n}","import React, { Component } from 'react'\nimport MapView from './MapView'\n\nclass HomeView extends Component {\n\n    render() {\n        return (\n            <div id=\"about\" className=\"p-5\">\n                <div className=\"jumbotron-fluid\">\n                    <h1 className=\"display-5\">Nyla Khalil</h1>\n                    <p className=\"lead\">Full Stack Software Engineer</p>\n                </div>\n                <MapView />\n            </div>\n        );  \n    }           \n}\n  \nexport default HomeView;","import React, { Component } from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ReactWordcloud from 'react-wordcloud'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faObjectGroup, faCode, faCubes, faShieldAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst DATA_ENDPOINT = '/json/words.json'\n\nclass CodeView extends Component {\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            data: {\n                title: \"\",\n                content: \"\",\n                icons: [\n                    { \"title\": \"design\", \"icon\": faObjectGroup },\n                    { \"title\": \"develop\", \"icon\": faCode },\n                    { \"title\": \"test\", \"icon\": faShieldAlt },\n                    { \"title\": \"deploy\", \"icon\": faCubes },\n                ]\n            },\n            words: {},\n            options: {\n                colors: ['PLUM', 'LIGHTSTEELBLUE', 'YELLOWGREEN', 'LIGHTSALMON'],\n                enableTooltip: false,\n                fontFamily: 'impact',\n                fontSizes: [5, 60],\n                fontStyle: 'normal',\n                fontWeight: 'normal',\n                padding: 1,\n                rotations: 3,\n                rotationAngles: [0, 90],\n                scale: 'sqrt',\n                spiral: 'archimedean',\n                transitionDuration: 1000,\n            }\n        };\n    }\n\n    componentDidMount() {\n        fetch(DATA_ENDPOINT)\n          .then(response => { return response.json() })\n          .then(data =>  this.setState({words: data}) )\n          .catch(error => console.error('Error: ', error));\n      }\n\n    getCol(item) {\n        return (\n            <Col key={item.title}>\n                <span className=\"cursor-pointer icon-circle\" onClick={this.setContent.bind(this, item.title)}>\n                    <FontAwesomeIcon icon={item.icon} color=\"black\" />\n                </span>\n                <p className=\"h4 p-1 text-capitalize\">{item.title}</p>\n            </Col>\n        )\n    }\n\n    getWorldCloud(title) { \n        if (title === undefined || Object.keys(this.state.words).length === 0) {\n            return null;\n        }\n        const words = this.state.words[title];\n        return (\n            <div className=\"word-cloud\">\n              <ReactWordcloud options={this.state.options} words={words} />\n            </div>\n        );\n    }\n    \n    setContent(title) {\n        this.setState({\n            content: title\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container text-center flex-grow-1 p-5\">\n                <Row>\n                    {this.state.data.icons.map(icon => this.getCol(icon))}\n                </Row>\n\n                <div id=\"#content\" className={this.state.content ? 'visible d-flex justify-content-center' : 'invisible'}>\n                    {this.getWorldCloud(this.state.content)}\n                </div>\n            </div>\n        );\n    }\n}\n  \nexport default CodeView;","import React, { Component } from 'react'\nimport Carousel from 'react-bootstrap/Carousel'\n\nconst DATA_ENDPOINT = '/json/photos.json'\n\nclass PhotoView extends Component {\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            images: [],\n            interval: null,\n            error: {}\n        };\n    }\n\n    componentDidMount() {\n        fetch(DATA_ENDPOINT)\n            .then(res => res.json())\n            .then((result) => \n                {\n                    this.setState({ images: result });\n                }, (error) => {\n                    this.setState({ error: error });\n                }\n            ).catch(error => console.error('Error: ', error));\n    }\n\n    getCarousel(images, interval) {\n       return (\n           <div className=\"p-2\">\n               <Carousel className=\"w-100 h-100 mx-auto\" interval={interval} indicators={true} controls={false}>\n                    {images.map(image => (\n                    <Carousel.Item key={image.key}>\n                        <img className=\"d-block w-50 mx-auto\" src={image.url} alt={image.title} />\n                        <Carousel.Caption>\n                            <small>{image.title}</small>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    ))}\n                </Carousel>\n           </div>\n       )\n    }\n\n    render() {\n        const { images, interval } = this.state;\n        \n        if (images && images.length > 0) {\n           return this.getCarousel(images, interval);\n        }\n        return null\n    }\n}\n  \nexport default PhotoView;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeView from './components/HomeView'\nimport CodeView from './components/CodeView'\nimport PhotoView from './components/PhotoView'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Header />\n        <div>\n            <HashRouter basename={process.env.PUBLIC_URL}>\n                <Route exact path='/' component={HomeView} />\n                <Route path='/code' component={CodeView} />\n                <Route path='/photography' component={PhotoView} />\n            </HashRouter>\n        </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}